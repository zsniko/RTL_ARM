$date
  Wed Oct 18 09:50:55 2023
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$var reg 32 ! a_tb[31:0] $end
$var reg 32 " b_tb[31:0] $end
$var reg 1 # cin_tb $end
$var reg 32 $ s_tb[31:0] $end
$var reg 1 % cout_tb $end
$scope module uut $end
$var reg 32 & a[31:0] $end
$var reg 32 ' b[31:0] $end
$var reg 1 ( cin $end
$var reg 32 ) s[31:0] $end
$var reg 1 * cout $end
$var reg 1 + c1 $end
$var reg 1 , c2 $end
$var reg 1 - c3 $end
$var reg 1 . c4 $end
$var reg 1 / c5 $end
$var reg 1 0 c6 $end
$var reg 1 1 c7 $end
$scope module add_4bit_0 $end
$var reg 4 2 a[3:0] $end
$var reg 4 3 b[3:0] $end
$var reg 1 4 cin $end
$var reg 4 5 s[3:0] $end
$var reg 1 6 cout $end
$var reg 1 7 c1 $end
$var reg 1 8 c2 $end
$var reg 1 9 c3 $end
$scope module fa1 $end
$var reg 1 : a $end
$var reg 1 ; b $end
$var reg 1 < cin $end
$var reg 1 = s $end
$var reg 1 > cout $end
$upscope $end
$scope module fa2 $end
$var reg 1 ? a $end
$var reg 1 @ b $end
$var reg 1 A cin $end
$var reg 1 B s $end
$var reg 1 C cout $end
$upscope $end
$scope module fa3 $end
$var reg 1 D a $end
$var reg 1 E b $end
$var reg 1 F cin $end
$var reg 1 G s $end
$var reg 1 H cout $end
$upscope $end
$scope module fa4 $end
$var reg 1 I a $end
$var reg 1 J b $end
$var reg 1 K cin $end
$var reg 1 L s $end
$var reg 1 M cout $end
$upscope $end
$upscope $end
$scope module add_4bit_1 $end
$var reg 4 N a[3:0] $end
$var reg 4 O b[3:0] $end
$var reg 1 P cin $end
$var reg 4 Q s[3:0] $end
$var reg 1 R cout $end
$var reg 1 S c1 $end
$var reg 1 T c2 $end
$var reg 1 U c3 $end
$scope module fa1 $end
$var reg 1 V a $end
$var reg 1 W b $end
$var reg 1 X cin $end
$var reg 1 Y s $end
$var reg 1 Z cout $end
$upscope $end
$scope module fa2 $end
$var reg 1 [ a $end
$var reg 1 \ b $end
$var reg 1 ] cin $end
$var reg 1 ^ s $end
$var reg 1 _ cout $end
$upscope $end
$scope module fa3 $end
$var reg 1 ` a $end
$var reg 1 a b $end
$var reg 1 b cin $end
$var reg 1 c s $end
$var reg 1 d cout $end
$upscope $end
$scope module fa4 $end
$var reg 1 e a $end
$var reg 1 f b $end
$var reg 1 g cin $end
$var reg 1 h s $end
$var reg 1 i cout $end
$upscope $end
$upscope $end
$scope module add_4bit_2 $end
$var reg 4 j a[3:0] $end
$var reg 4 k b[3:0] $end
$var reg 1 l cin $end
$var reg 4 m s[3:0] $end
$var reg 1 n cout $end
$var reg 1 o c1 $end
$var reg 1 p c2 $end
$var reg 1 q c3 $end
$scope module fa1 $end
$var reg 1 r a $end
$var reg 1 s b $end
$var reg 1 t cin $end
$var reg 1 u s $end
$var reg 1 v cout $end
$upscope $end
$scope module fa2 $end
$var reg 1 w a $end
$var reg 1 x b $end
$var reg 1 y cin $end
$var reg 1 z s $end
$var reg 1 { cout $end
$upscope $end
$scope module fa3 $end
$var reg 1 | a $end
$var reg 1 } b $end
$var reg 1 !" cin $end
$var reg 1 "" s $end
$var reg 1 #" cout $end
$upscope $end
$scope module fa4 $end
$var reg 1 $" a $end
$var reg 1 %" b $end
$var reg 1 &" cin $end
$var reg 1 '" s $end
$var reg 1 (" cout $end
$upscope $end
$upscope $end
$scope module add_4bit_3 $end
$var reg 4 )" a[3:0] $end
$var reg 4 *" b[3:0] $end
$var reg 1 +" cin $end
$var reg 4 ," s[3:0] $end
$var reg 1 -" cout $end
$var reg 1 ." c1 $end
$var reg 1 /" c2 $end
$var reg 1 0" c3 $end
$scope module fa1 $end
$var reg 1 1" a $end
$var reg 1 2" b $end
$var reg 1 3" cin $end
$var reg 1 4" s $end
$var reg 1 5" cout $end
$upscope $end
$scope module fa2 $end
$var reg 1 6" a $end
$var reg 1 7" b $end
$var reg 1 8" cin $end
$var reg 1 9" s $end
$var reg 1 :" cout $end
$upscope $end
$scope module fa3 $end
$var reg 1 ;" a $end
$var reg 1 <" b $end
$var reg 1 =" cin $end
$var reg 1 >" s $end
$var reg 1 ?" cout $end
$upscope $end
$scope module fa4 $end
$var reg 1 @" a $end
$var reg 1 A" b $end
$var reg 1 B" cin $end
$var reg 1 C" s $end
$var reg 1 D" cout $end
$upscope $end
$upscope $end
$scope module add_4bit_4 $end
$var reg 4 E" a[3:0] $end
$var reg 4 F" b[3:0] $end
$var reg 1 G" cin $end
$var reg 4 H" s[3:0] $end
$var reg 1 I" cout $end
$var reg 1 J" c1 $end
$var reg 1 K" c2 $end
$var reg 1 L" c3 $end
$scope module fa1 $end
$var reg 1 M" a $end
$var reg 1 N" b $end
$var reg 1 O" cin $end
$var reg 1 P" s $end
$var reg 1 Q" cout $end
$upscope $end
$scope module fa2 $end
$var reg 1 R" a $end
$var reg 1 S" b $end
$var reg 1 T" cin $end
$var reg 1 U" s $end
$var reg 1 V" cout $end
$upscope $end
$scope module fa3 $end
$var reg 1 W" a $end
$var reg 1 X" b $end
$var reg 1 Y" cin $end
$var reg 1 Z" s $end
$var reg 1 [" cout $end
$upscope $end
$scope module fa4 $end
$var reg 1 \" a $end
$var reg 1 ]" b $end
$var reg 1 ^" cin $end
$var reg 1 _" s $end
$var reg 1 `" cout $end
$upscope $end
$upscope $end
$scope module add_4bit_5 $end
$var reg 4 a" a[3:0] $end
$var reg 4 b" b[3:0] $end
$var reg 1 c" cin $end
$var reg 4 d" s[3:0] $end
$var reg 1 e" cout $end
$var reg 1 f" c1 $end
$var reg 1 g" c2 $end
$var reg 1 h" c3 $end
$scope module fa1 $end
$var reg 1 i" a $end
$var reg 1 j" b $end
$var reg 1 k" cin $end
$var reg 1 l" s $end
$var reg 1 m" cout $end
$upscope $end
$scope module fa2 $end
$var reg 1 n" a $end
$var reg 1 o" b $end
$var reg 1 p" cin $end
$var reg 1 q" s $end
$var reg 1 r" cout $end
$upscope $end
$scope module fa3 $end
$var reg 1 s" a $end
$var reg 1 t" b $end
$var reg 1 u" cin $end
$var reg 1 v" s $end
$var reg 1 w" cout $end
$upscope $end
$scope module fa4 $end
$var reg 1 x" a $end
$var reg 1 y" b $end
$var reg 1 z" cin $end
$var reg 1 {" s $end
$var reg 1 |" cout $end
$upscope $end
$upscope $end
$scope module add_4bit_6 $end
$var reg 4 }" a[3:0] $end
$var reg 4 !# b[3:0] $end
$var reg 1 "# cin $end
$var reg 4 ## s[3:0] $end
$var reg 1 $# cout $end
$var reg 1 %# c1 $end
$var reg 1 &# c2 $end
$var reg 1 '# c3 $end
$scope module fa1 $end
$var reg 1 (# a $end
$var reg 1 )# b $end
$var reg 1 *# cin $end
$var reg 1 +# s $end
$var reg 1 ,# cout $end
$upscope $end
$scope module fa2 $end
$var reg 1 -# a $end
$var reg 1 .# b $end
$var reg 1 /# cin $end
$var reg 1 0# s $end
$var reg 1 1# cout $end
$upscope $end
$scope module fa3 $end
$var reg 1 2# a $end
$var reg 1 3# b $end
$var reg 1 4# cin $end
$var reg 1 5# s $end
$var reg 1 6# cout $end
$upscope $end
$scope module fa4 $end
$var reg 1 7# a $end
$var reg 1 8# b $end
$var reg 1 9# cin $end
$var reg 1 :# s $end
$var reg 1 ;# cout $end
$upscope $end
$upscope $end
$scope module add_4bit_7 $end
$var reg 4 <# a[3:0] $end
$var reg 4 =# b[3:0] $end
$var reg 1 ># cin $end
$var reg 4 ?# s[3:0] $end
$var reg 1 @# cout $end
$var reg 1 A# c1 $end
$var reg 1 B# c2 $end
$var reg 1 C# c3 $end
$scope module fa1 $end
$var reg 1 D# a $end
$var reg 1 E# b $end
$var reg 1 F# cin $end
$var reg 1 G# s $end
$var reg 1 H# cout $end
$upscope $end
$scope module fa2 $end
$var reg 1 I# a $end
$var reg 1 J# b $end
$var reg 1 K# cin $end
$var reg 1 L# s $end
$var reg 1 M# cout $end
$upscope $end
$scope module fa3 $end
$var reg 1 N# a $end
$var reg 1 O# b $end
$var reg 1 P# cin $end
$var reg 1 Q# s $end
$var reg 1 R# cout $end
$upscope $end
$scope module fa4 $end
$var reg 1 S# a $end
$var reg 1 T# b $end
$var reg 1 U# cin $end
$var reg 1 V# s $end
$var reg 1 W# cout $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU !
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU "
0#
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU $
U%
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU &
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU '
0(
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU )
U*
U+
U,
U-
U.
U/
U0
U1
bUUUU 2
bUUUU 3
04
bUUUU 5
U6
U7
U8
U9
U:
U;
0<
U=
U>
U?
U@
UA
UB
UC
UD
UE
UF
UG
UH
UI
UJ
UK
UL
UM
bUUUU N
bUUUU O
UP
bUUUU Q
UR
US
UT
UU
UV
UW
UX
UY
UZ
U[
U\
U]
U^
U_
U`
Ua
Ub
Uc
Ud
Ue
Uf
Ug
Uh
Ui
bUUUU j
bUUUU k
Ul
bUUUU m
Un
Uo
Up
Uq
Ur
Us
Ut
Uu
Uv
Uw
Ux
Uy
Uz
U{
U|
U}
U!"
U""
U#"
U$"
U%"
U&"
U'"
U("
bUUUU )"
bUUUU *"
U+"
bUUUU ,"
U-"
U."
U/"
U0"
U1"
U2"
U3"
U4"
U5"
U6"
U7"
U8"
U9"
U:"
U;"
U<"
U="
U>"
U?"
U@"
UA"
UB"
UC"
UD"
bUUUU E"
bUUUU F"
UG"
bUUUU H"
UI"
UJ"
UK"
UL"
UM"
UN"
UO"
UP"
UQ"
UR"
US"
UT"
UU"
UV"
UW"
UX"
UY"
UZ"
U["
U\"
U]"
U^"
U_"
U`"
bUUUU a"
bUUUU b"
Uc"
bUUUU d"
Ue"
Uf"
Ug"
Uh"
Ui"
Uj"
Uk"
Ul"
Um"
Un"
Uo"
Up"
Uq"
Ur"
Us"
Ut"
Uu"
Uv"
Uw"
Ux"
Uy"
Uz"
U{"
U|"
bUUUU }"
bUUUU !#
U"#
bUUUU ##
U$#
U%#
U&#
U'#
U(#
U)#
U*#
U+#
U,#
U-#
U.#
U/#
U0#
U1#
U2#
U3#
U4#
U5#
U6#
U7#
U8#
U9#
U:#
U;#
bUUUU <#
bUUUU =#
U>#
bUUUU ?#
U@#
UA#
UB#
UC#
UD#
UE#
UF#
UG#
UH#
UI#
UJ#
UK#
UL#
UM#
UN#
UO#
UP#
UQ#
UR#
US#
UT#
UU#
UV#
UW#
#50000000
b00000000000000000000000000001111 !
b00000000000000000000000000000001 "
b00000000000000000000000000010000 $
0%
b00000000000000000000000000001111 &
b00000000000000000000000000000001 '
b00000000000000000000000000010000 )
0*
1+
0,
0-
0.
0/
00
01
b1111 2
b0001 3
b0000 5
16
17
18
19
1:
1;
0=
1>
1?
0@
1A
0B
1C
1D
0E
1F
0G
1H
1I
0J
1K
0L
1M
b0000 N
b0000 O
1P
b0001 Q
0R
0S
0T
0U
0V
0W
1X
1Y
0Z
0[
0\
0]
0^
0_
0`
0a
0b
0c
0d
0e
0f
0g
0h
0i
b0000 j
b0000 k
0l
b0000 m
0n
0o
0p
0q
0r
0s
0t
0u
0v
0w
0x
0y
0z
0{
0|
0}
0!"
0""
0#"
0$"
0%"
0&"
0'"
0("
b0000 )"
b0000 *"
0+"
b0000 ,"
0-"
0."
0/"
00"
01"
02"
03"
04"
05"
06"
07"
08"
09"
0:"
0;"
0<"
0="
0>"
0?"
0@"
0A"
0B"
0C"
0D"
b0000 E"
b0000 F"
0G"
b0000 H"
0I"
0J"
0K"
0L"
0M"
0N"
0O"
0P"
0Q"
0R"
0S"
0T"
0U"
0V"
0W"
0X"
0Y"
0Z"
0["
0\"
0]"
0^"
0_"
0`"
b0000 a"
b0000 b"
0c"
b0000 d"
0e"
0f"
0g"
0h"
0i"
0j"
0k"
0l"
0m"
0n"
0o"
0p"
0q"
0r"
0s"
0t"
0u"
0v"
0w"
0x"
0y"
0z"
0{"
0|"
b0000 }"
b0000 !#
0"#
b0000 ##
0$#
0%#
0&#
0'#
0(#
0)#
0*#
0+#
0,#
0-#
0.#
0/#
00#
01#
02#
03#
04#
05#
06#
07#
08#
09#
0:#
0;#
b0000 <#
b0000 =#
0>#
b0000 ?#
0@#
0A#
0B#
0C#
0D#
0E#
0F#
0G#
0H#
0I#
0J#
0K#
0L#
0M#
0N#
0O#
0P#
0Q#
0R#
0S#
0T#
0U#
0V#
0W#
#100000000
b00000000000000000000000000001010 "
b00000000000000000000000000011001 $
b00000000000000000000000000001010 '
b00000000000000000000000000011001 )
b1010 3
b1001 5
07
0;
1=
0>
1@
0A
0B
1J
1L
#150000000
b00000000000001000000000000001111 !
b00010000000001000000000000001101 "
b00010000000010000000000000011100 $
b00000000000001000000000000001111 &
b00010000000001000000000000001101 '
b00010000000010000000000000011100 )
b1101 3
b1100 5
17
18
1;
0=
1>
0@
1A
0B
1C
1E
1F
1G
b0100 E"
b0100 F"
b1000 H"
1L"
1W"
1X"
1["
1^"
1_"
b0001 =#
b0001 ?#
1E#
1G#
#200000000
b11111111111111111111111111111111 !
b00000000000000000000000000000001 "
b00000000000000000000000000000000 $
1%
b11111111111111111111111111111111 &
b00000000000000000000000000000001 '
b00000000000000000000000000000000 )
1*
1,
1-
1.
1/
10
11
b0001 3
b0000 5
0E
0G
0J
0L
b1111 N
b0000 Q
1R
1S
1T
1U
1V
0Y
1Z
1[
1]
0^
1_
1`
1b
0c
1d
1e
1g
0h
1i
b1111 j
1l
b0000 m
1n
1o
1p
1q
1r
1t
0u
1v
1w
1y
0z
1{
1|
1!"
0""
1#"
1$"
1&"
0'"
1("
b1111 )"
1+"
b0000 ,"
1-"
1."
1/"
10"
11"
13"
04"
15"
16"
18"
09"
1:"
1;"
1="
0>"
1?"
1@"
1B"
0C"
1D"
b1111 E"
b0000 F"
1G"
b0000 H"
1I"
1J"
1K"
1L"
1M"
1O"
0P"
1Q"
1R"
1T"
0U"
1V"
0X"
1Y"
0Z"
1["
1\"
1^"
0_"
1`"
b1111 a"
1c"
b0000 d"
1e"
1f"
1g"
1h"
1i"
1k"
0l"
1m"
1n"
1p"
0q"
1r"
1s"
1u"
0v"
1w"
1x"
1z"
0{"
1|"
b1111 }"
1"#
b0000 ##
1$#
1%#
1&#
1'#
1(#
1*#
0+#
1,#
1-#
1/#
00#
11#
12#
14#
05#
16#
17#
19#
0:#
1;#
b1111 <#
b0000 =#
1>#
b0000 ?#
1@#
1A#
1B#
1C#
1D#
0E#
1F#
0G#
1H#
1I#
1K#
0L#
1M#
1N#
1P#
0Q#
1R#
1S#
1U#
0V#
1W#
#250000000
b11111111111111111111111111111111 "
b11111111111111111111111111111110 $
b11111111111111111111111111111111 '
b11111111111111111111111111111110 )
b1111 3
b1110 5
1@
1B
1E
1G
1J
1L
b1111 O
b1111 Q
1W
1Y
1\
1^
1a
1c
1f
1h
b1111 k
b1111 m
1s
1u
1x
1z
1}
1""
1%"
1'"
b1111 *"
b1111 ,"
12"
14"
17"
19"
1<"
1>"
1A"
1C"
b1111 F"
b1111 H"
1N"
1P"
1S"
1U"
1X"
1Z"
1]"
1_"
b1111 b"
b1111 d"
1j"
1l"
1o"
1q"
1t"
1v"
1y"
1{"
b1111 !#
b1111 ##
1)#
1+#
1.#
10#
13#
15#
18#
1:#
b1111 =#
b1111 ?#
1E#
1G#
1J#
1L#
1O#
1Q#
1T#
1V#
#300000000
1#
b11111111111111111111111111111111 $
1(
b11111111111111111111111111111111 )
14
b1111 5
1<
1=
#350000000
